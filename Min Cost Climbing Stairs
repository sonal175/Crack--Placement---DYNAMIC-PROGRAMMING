//  Min Cost Climbing Stairs

// dp solution

// TC-O(n) SC-O(n)  where n is the size of cost vector

 // Code--
 
   int minCostClimbingStairs(vector<int>& cost) {
          int n=cost.size();
        int dp[n+1];
        dp[1]=dp[0]=0;
        for(int i=2;i<=n;i++){
            dp[i]=min(dp[i-1]+cost[i-1], dp[i-2]+cost[i-2]);
        }
        return dp[n];
    }
    
    // TC-O(n) SC-O(1) where n is the size of cost vector
    
     // Code--
     
      int minCostClimbingStairs(vector<int>& cost) {
        int a1=0;
        int a2=0;
        for(int i=2;i<=cost.size();i++){
            int x=min(a1+cost[i-1],a2+cost[i-2]);
            a2=a1;
            a1=x;
        }
        return a1;
    }
