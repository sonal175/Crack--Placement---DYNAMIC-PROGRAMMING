// Max sum without adjacents

  // 1d dp problem
  
    // TC-O(n) SC-O(n)  where n is the size of arr
    
     // Code--
     
       nt findMaxSum(int *arr, int n) {
	    int dp[n];
	    dp[0]=arr[0];
	    for(int i=1;i<n;i++){
	        if(i-2>=0){
	            dp[i]=max(arr[i]+dp[i-2], dp[i-1]);
	        }else{
	            dp[i]=max(arr[i],dp[i-1]);
	        }
	    }
	    return dp[n-1];
	}
  
  // TC-O(n)  SC-O(1)  
  
   // Code--
     
     int findMaxSum(int *arr, int n) {
	    if(n==1) return arr[0];
	    
	    int a2=arr[0];
	    int a1=max(arr[1], a2);
	    
	    for(int i=2;i<n;i++){
	        int x=max(arr[i]+a2, a1);
	        a2=a1;
	        a1=x;
	    }
	    return a1;
	}
